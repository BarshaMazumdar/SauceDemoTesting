<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="55111" started-at="2022-11-12T00:25:34 GST" finished-at="2022-11-12T00:26:29 GST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRun$TestRunner@74287ea3]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="55111" started-at="2022-11-12T00:25:34 GST" finished-at="2022-11-12T00:26:29 GST">
      <class name="testRunner.testRun$TestRunner">
        <test-method status="PASS" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:testRunner.testRun$TestRunner@74287ea3]" name="setUpClass" is-config="true" duration-ms="24" started-at="2022-11-12T00:25:34 GST" finished-at="2022-11-12T00:25:34 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@21f459fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRun$TestRunner@74287ea3]" name="runScenario" duration-ms="12322" started-at="2022-11-12T00:25:34 GST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-11-12T00:25:46 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login Validation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login flow test for saucedemo project"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRun$TestRunner@74287ea3]" name="runScenario" duration-ms="11176" started-at="2022-11-12T00:25:46 GST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-11-12T00:25:58 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login Validation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login flow test for saucedemo project"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRun$TestRunner@74287ea3]" name="runScenario" duration-ms="31484" started-at="2022-11-12T00:25:58 GST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-11-12T00:26:29 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login Validation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login flow test for saucedemo project"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:testRunner.testRun$TestRunner@74287ea3]" name="tearDownClass" is-config="true" duration-ms="67" started-at="2022-11-12T00:26:29 GST" finished-at="2022-11-12T00:26:29 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testRunner.testRun$TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
